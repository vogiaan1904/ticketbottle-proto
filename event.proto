syntax = "proto3";

package event;
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

service EventService {
    rpc Create(CreateEventRequest) returns (CreateEventResponse);
    rpc Update(UpdateEventRequest) returns (UpdateEventResponse);
    rpc FindOne(FindOneEventRequest) returns (FindOneEventResponse);
    rpc FindAll(FindAllEventRequest) returns (FindAllEventResponse);
    rpc Delete(DeleteEventRequest) returns (google.protobuf.Empty);
    
    // Additional event-specific operations
    rpc PublishEvent(PublishEventRequest) returns (PublishEventResponse);
    rpc CancelEvent(CancelEventRequest) returns (CancelEventResponse);
    rpc GetEventRoles(GetEventRolesRequest) returns (GetEventRolesResponse);
    rpc AssignEventRole(AssignEventRoleRequest) returns (AssignEventRoleResponse);
    rpc RemoveEventRole(RemoveEventRoleRequest) returns (google.protobuf.Empty);
}

enum EventStatus {
    EVENT_STATUS_UNSPECIFIED = 0;
    EVENT_STATUS_DRAFT = 1;
    EVENT_STATUS_PUBLISHED = 2;
    EVENT_STATUS_CANCELLED = 3;
}

enum Category {
    CATEGORY_UNSPECIFIED = 0;
    CATEGORY_MUSIC = 1;
    CATEGORY_SPORT = 2;
    CATEGORY_THEATERS_AND_ART = 3;
    CATEGORY_OTHER = 4;
}

enum EventRoleType {
    EVENT_ROLE_TYPE_UNSPECIFIED = 0;
    EVENT_ROLE_TYPE_ADMIN = 1;
    EVENT_ROLE_TYPE_EDITOR = 2;
    EVENT_ROLE_TYPE_VIEWER = 3;
}

message Event {
    string id = 1;
    string name = 2;
    string description = 3;
    google.protobuf.Timestamp start_date = 4;
    google.protobuf.Timestamp end_date = 5;
    string thumbnail_url = 6;
    EventLocation location = 7;
    EventConfig config = 8;
    EventOrganizer organizer = 9;
    repeated EventRole roles = 10;
    repeated Category categories = 11;
    google.protobuf.Timestamp created_at = 12;
    google.protobuf.Timestamp updated_at = 13;
}

message EventConfig {
    string id = 1;
    google.protobuf.Timestamp ticket_sale_start_date = 2;
    google.protobuf.Timestamp ticket_sale_end_date = 3;
    bool is_free = 4;
    int32 max_attendees = 5;
    bool is_public = 6;
    bool requires_approval = 7;
    bool allow_wait_room = 8;
    bool is_new_trending = 9;
    EventStatus status = 10;
    google.protobuf.Timestamp created_at = 12;
    google.protobuf.Timestamp updated_at = 13;
}

message EventLocation {
    string id = 1;
    string venue = 2;
    string address = 3;
    google.protobuf.Timestamp created_at = 4;
    google.protobuf.Timestamp updated_at = 5;
}

message EventOrganizer {
    string id = 1;
    string name = 2;
    string description = 3;
    string logo_url = 4;
    google.protobuf.Timestamp created_at = 5;
    google.protobuf.Timestamp updated_at = 6;
}

message EventRole {
    string id = 1;
    string user_id = 2;
    string event_id = 3;
    EventRoleType role = 4;
    google.protobuf.Timestamp created_at = 5;
    google.protobuf.Timestamp updated_at = 6;
}

message CreateEventRequest {
    string name = 1;
    string description = 2;
    google.protobuf.Timestamp start_date = 3;
    google.protobuf.Timestamp end_date = 4;
    string thumbnail_url = 5;
    string venue = 6;
    string street = 7;
    string city = 8;
    string country = 9;
    optional string ward = 10;
    optional string district = 11;
    repeated Category categories = 12;
    string organizer_name = 13;
    string organizer_description = 14;
    string organizer_logo_url = 15;
}

message CreateEventResponse {
    Event event = 1;
}

message UpdateEventRequest {
    string id = 1;
    optional string name = 2;
    optional string description = 3;
    optional google.protobuf.Timestamp start_date = 4;
    optional google.protobuf.Timestamp end_date = 5;
    optional string thumbnail_url = 6;
    optional string venue_name = 7;
    optional string street = 8;
    optional string city = 9;
    optional string country = 10;
    optional string ward = 11;
    optional string district = 12;
    repeated Category categories = 13;
    optional string organizer_name = 14;
    optional string organizer_description = 15;
    optional string organizer_logo_url = 16;
}

message UpdateEventResponse {
    Event event = 1;
}

message FindOneEventRequest {
    oneof find_option {
        string id = 1;
        string name = 2;
    }
}

message FindOneEventResponse {
    Event event = 1;
}

message FindManyEventRequest {
    int32 page_size = 1;
    string page_token = 2;
    string search = 3;
    repeated Category categories = 4;
    EventStatus status = 5;
}

message FindManyEventResponse {
    repeated Event events = 1;
    string next_page_token = 2;
    PaginationInfo pagination = 3;
}

message PaginationInfo {
  int32 current_page_size = 1;
  int32 current_page = 2;
  bool has_next_page = 3;
  bool has_previous_page = 4;
}

message FindAllEventRequest {
    repeated string ids = 1;
    repeated string organizer_ids = 2;
    repeated EventStatus statuses = 3;
    repeated Category categories = 4;
    optional google.protobuf.Timestamp start_date_from = 5;
    optional google.protobuf.Timestamp start_date_to = 6;
    optional string location_city = 7;
    optional string location_country = 8;
    optional bool is_public = 9;
    optional bool is_free = 10;
    optional int32 limit = 11;
    optional int32 offset = 12;
}

message FindAllEventResponse {
    repeated Event events = 1;
    int32 total_count = 2;
}

message DeleteEventRequest {
    string id = 1;
}

// Event-specific operation messages
message PublishEventRequest {
    string event_id = 1;
}

message PublishEventResponse {
    Event event = 1;
}

message CancelEventRequest {
    string event_id = 1;
}

message CancelEventResponse {
    Event event = 1;
}

message GetEventRolesRequest {
    string event_id = 1;
}

message GetEventRolesResponse {
    repeated EventRole roles = 1;
}

message AssignEventRoleRequest {
    string event_id = 1;
    string user_id = 2;
    EventRoleType role = 3;
}

message AssignEventRoleResponse {
    EventRole role = 1;
}

message RemoveEventRoleRequest {
    string event_id = 1;
    string user_id = 2;
}